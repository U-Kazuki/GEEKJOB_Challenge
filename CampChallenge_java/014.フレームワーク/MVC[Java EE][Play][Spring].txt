Javaを学習する事は「プログラムの作り方や組み立て方」であり、Javaのフレームワークを学ぶ事は「Webアプリの作り方」を学ぶ事になります。

・java EE: Javaの標準仕様のフレームワーク。
サーブレットやJSP以外にもEJBやJavaの各種APIを使用可能。これらは、企業システムの構築に必要な機能がまとめて提供されている。
最新版ではJava EEの使い勝手が向上し人気が上がってきている模様。
スタンダードに安定感のあるWebアプリケーション開発を行いたいなら、Java EEで開発するのが良いだろう。



〜〜〜　Sprint Framework　〜〜〜
変更に強い。Javaを使ったアプリ開発は大規模なものが多いので、途中で修正や変更が入る度にかなりの時間を費やす必要がありました。
また、依存性のあるプログラムは外部からとりいれるようになっているので、１つ１つのプログラムを独立させやすく、変更する場合も最低限の変更で済むので開発が楽になります。

テストが簡単。「Spring MVC Test」という専用のテストプログラムがあります。これは、１つ１つの処理がうまくいっているかをテストする（単体テスト）ではなく、一連の処理を終えきれるかどうかをテストする（結合テスト）が出来ます。
なので、バグの混入を最小限に抑え、安全に開発を進める事が出来るようになりました。

・拡張性が高い：
フレームワークの基本的な機能の大部分が「インターフェース」として提供されています。また、必要な機能がある場合は、後から簡単に追加する事が出来ます。「オブジェクト指向の基本原則を徹底」して、Javaを最大限生かす事が出来るように設計されています。

・保守性が高い：
「AOP（Aspect Oriented Programming）」というプログラミングが使える。
これは、クラスには「本質的な処理」のみを書いて「本質的ではない処理（共通化できる処理）」を別に書く見たいな話。
主な必要な処理とそうじゃない処理をを分ける事で、「コードを分かりやすくする効果」があります。
これによって、何かバグや不具合があった場合に原因を特定しやすくなるのです。

・再利用性が高い：
「AOP」の仕組みにより、共通のプログラムを纏め易くなるので、再利用も可能です。
再利用する事で、プログラムを書く量が減り、修正も最低限で済みます。
これは、特に長期のアプリ開発で物凄く効率に差がつく部分になります。
再利用性の高いプログラムを、仕組みで解決しているのです。
〜〜〜　Sprint Framework　終了　〜〜〜



〜〜〜　Play FrameWork　〜〜〜
・高速開発：
Play FrameWorkは軽量なフレームワークで動作も速いです。
また、「MVC」という設計に基づいて開発を行える為、WEBアプリ開発を高速で行えます。
Javaではコンパイルという作業が必要でしたが、WEBアプリ開発ではWEBページを見ながら動作を確認する事が多いので、毎回コンパイルする事で開発に時間が掛かっていました。
しかし、弱点であった「コンパイルの遅さ」も解消されたので、「コードの追加や修正が即座に反映される」様になっています。
Javaのメリットである、「堅牢性や高速な動作を最大限活かせる」様になっています。

・リソースが少ない：
CPUやメモリーに負担が少なく、少ないリソースでアプリを動作させる事が出来ます。
「大規模まで耐えれるアプリを作れる」ので、設計を気にせず開発を行えます。

・高い拡張性：
Play FrameWorkは最新技術まで幅広く対応しています。
幅広く対応しているので、「どんな開発でも最も効率の良いものを選ぶ事が出来る」ため、開発がスムーズになります。

・最適なアプリ：
WEBアプリを作る事が出来ますが、その中でも特に「WEBシステム」と「WEBサービス」に向いていると言えます。
費用制限のある企業向けのシステムや、スピードある開発を求められるWEBサービス等では「高速で開発出来る」事が何よりのメリットです。
アプリ開発において「速い事は最大の武器」になります。
〜〜〜　Play FrameWork　終了　〜〜〜